function [] = BeowulfClient(fun)
    % Registrarse en Machines
    IP = GetMachineIP();
    BeowulfCreateMachine('Wating',IP)
    % Obtener el ID de la Máquina
    machines = BeowulfReadMachines();
    for i = 1:height(machines)
           if cell2mat(machines.ip(i)) == IP && strcmp(cell2mat(tasks.status(i)),'Waiting')
                machine_ID = -1;
    % Revisar Tasks hasta encontrar una task en waiting con el IP de la
    % máquina
    while 1
        tasks = BeowulfReadTasks();
        for i = 1:height(tasks)
           if cell2mat(tasks.ip(i)) == IP && strcmp(cell2mat(tasks.status(i)),'Waiting')
                % Actualizar status de Machines a working
                BeowulfUpdateMachine(machine_ID,'Working',IP);
                % Actualizar status de Task a working
                BeowulfUpdateTask(cell2mat(tasks.id(i)),'Working',cell2mat(tasks.input(i)),cell2mat(tasks.output(i)));
                % Parse Inputs
                temp = split(cell2mat(tasks.input(2)));
                INPUTS = zeros(length(temp),1);
                for j = 1:length(INPUTS)
                    INPUTS(j) = str2double( cell2mat(temp(j)) );
                end
                % Correr la función con los inputs de la task
                OUTPUTS = fun(INPUTS);
                % Parse OUTPUTS
                temp = OUTPUTS;
                OUTPUTS = '';
                for j = 1:length(temp)
                   OUTPUTS = [OUTPUTS,' ',num2str(temp(j))]; %#ok<AGROW>
                end
                % Actualizar el task status a done y output al output de la función
                BeowulfUpdateTask(cell2mat(tasks.id(i)),'Done',cell2mat(tasks.input(i)),OUTPUTS);
                % Actualizar el Machine status a waiting
                BeowulfUpdateMachine(machine_ID,'Waiting',IP);
           end
        end
    end
end
